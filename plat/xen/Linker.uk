ifeq (x86_64,$(CONFIG_UK_ARCH))
XEN_LDFLAGS-y += -Wl,-m,elf_x86_64
endif

XEN_LDSCRIPT     := $(call src2lds,libxenplat,$(XEN_LDSCRIPT_SRC-y))

##
## Link image
##
XEN_IMAGE := $(BUILD_DIR)/$(CONFIG_UK_NAME)_xen-$(CONFIG_UK_ARCH)

XEN_LD_SCRIPT_FLAGS := $(addprefix -Wl$(comma)-T$(comma),\
			 $(XEN_LD_SCRIPT-y) $(EXTRA_LD_SCRIPT-y))

$(XEN_IMAGE): $(XEN_ALIBS) $(XEN_ALIBS-y) $(XEN_OLIBS) $(XEN_OLIBS-y) \
              $(UK_ALIBS) $(UK_ALIBS-y) $(UK_OLIBS) $(UK_OLIBS-y) \
              $(XEN_LDSCRIPT)
	$(call build_cmd,LD,,$@.ld.o,\
	       $(LD) -r $(LIBLDFLAGS) $(LIBLDFLAGS-y) \
			$(XEN_LDFLAGS) $(XEN_LDFLAGS-y) \
			$(XEN_OLIBS) $(XEN_OLIBS-y) \
			$(UK_OLIBS) $(UK_OLIBS-y) \
			-Wl$(comma)--start-group \
			$(XEN_ALIBS) $(XEN_ALIBS-y) \
			$(UK_ALIBS) $(UK_ALIBS-y) \
			-Wl$(comma)--end-group \
			-o $@.ld.o)
	$(call build_cmd,OBJCOPY,,$@.o,\
	       $(OBJCOPY) -w -G xenos_* -G _libxenplat_start $@.ld.o $@.o)
ifeq (arm,$(CONFIG_UK_ARCH))
	$(call build_cmd,LD,,$@.elf.dbg,\
	       $(LD) $(LDFLAGS) $(LDFLAGS-y) $(XEN_LDFLAGS) $(XEN_LDFLAGS-y) \
		     -Wl$(comma)-dT$(comma)$(call strip,$(XEN_LDSCRIPT)) \
		     $(XEN_LD_SCRIPT_FLAGS) \
		     $@.o -o $@.elf.dbg)
	$(call verbose_cmd,SCSTRIP,$(notdir $@.elf),\
		$(SCRIPTS_DIR)/sect-strip.py \
			$(SECT_STRIP_FLAGS) $(SECT_STRIP_FLAGS-y) \
			--with-objcopy=$(OBJCOPY) \
			$@.elf.dbg -o $@.elf)
	$(call verbose_cmd,STRIP,$(notdir $@.elf), $(STRIP) -s $@.elf)
ifeq ($(CONFIG_OPTIMIZE_SYMFILE),y)
	$(call build_cmd,NM,,$@.sym,\
	       $(NM) -n $@.elf.dbg > $@.sym)
endif
	$(call build_cmd,OBJCOPY,,$@,\
	       $(OBJCOPY) -O binary $@.elf $@)
ifeq ($(CONFIG_OPTIMIZE_COMPRESS),y)
	$(call build_cmd,GZ,,$@.gz,\
	       $(GZIP) -f -9 -c $@ >$@.gz)
endif
else
	$(call build_cmd,LD,,$@.dbg,\
	       $(LD) $(LDFLAGS) $(LDFLAGS-y) $(XEN_LDFLAGS) $(XEN_LDFLAGS-y) \
		     -Wl$(comma)-dT$(comma)$(call strip,$(XEN_LDSCRIPT)) \
		     $(XEN_LD_SCRIPT_FLAGS) \
		     $@.o -o $@.dbg)
	$(call verbose_cmd,SCSTRIP,$(notdir $@),\
		$(SCRIPTS_DIR)/sect-strip.py \
			$(SECT_STRIP_FLAGS) $(SECT_STRIP_FLAGS-y) \
			$@.dbg -o $@)
	$(call verbose_cmd,STRIP,$(notdir $@), $(STRIP) -s $@)
ifeq ($(CONFIG_OPTIMIZE_SYMFILE),y)
	$(call build_cmd,NM,,$@.sym,\
	       $(NM) -n $@.dbg > $@.sym)
endif
ifeq ($(CONFIG_OPTIMIZE_COMPRESS),y)
	$(call build_cmd,GZ,,$@.gz,\
	       $(GZIP) -f -9 -c $@ >$@.gz)
endif
endif

# register image to the build
UK_IMAGES-$(CONFIG_PLAT_XEN) += $(XEN_IMAGE)

# ...for cleaning:
LIBXENPLAT_CLEAN += $(call build_clean,$(XEN_IMAGE).ld.o)
LIBXENPLAT_CLEAN += $(call build_clean,$(XEN_IMAGE).o)
LIBXENPLAT_CLEAN += $(call build_clean,$(XEN_IMAGE).elf)
LIBXENPLAT_CLEAN += $(call build_clean,$(XEN_IMAGE).elf.dbg)
LIBXENPLAT_CLEAN += $(call build_clean,$(XEN_IMAGE).gz)
LIBXENPLAT_CLEAN += $(call build_clean,$(XEN_IMAGE).dbg)
LIBXENPLAT_CLEAN += $(call build_clean,$(XEN_IMAGE).sym)
LIBXENPLAT_CLEAN += $(call build_clean,$(XEN_IMAGE))
